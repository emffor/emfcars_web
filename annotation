
/* 
import { forwardRef, ForwardRefRenderFunction } from 'react';
import {
    Input as ChakraInput,
    FormLabel,
    FormControl,
    InputProps as ChakraInputProps
} from '@chakra-ui/react';

interface InputProps extends ChakraInputProps {
    name: string;
    label?: string;
}

const InputBase: ForwardRefRenderFunction<HTMLInputElement, InputProps> =
    ({ name, label, ...rest }, ref) => {
        return (
            <FormControl>
            {/ _ Se existir label mostrar_ /}
{
    !!label && <FormLabel htmlFor={ name }> { label } < /FormLabel>}

        < ChakraInput
    name = { name }
    id = { name }
    focusBorderColor = 'gray.500'
    bgColor = 'gray.100'
    variant = { "filled"}
    _hover = {{
        bgColor: 'gray.50'
    }
}
size = "lg"
ref = { ref }
{...rest }
/>
    < /FormControl>
        );
    }

export const Input = forwardRef(InputBase);



const handleCreateCar: SubmitHandler<CarFormData> = async (values) => {
    await new Promise(resolve => setTimeout(resolve, 2000));
    console.log(values);
    navigate('/cars/list');
}

 */